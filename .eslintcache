[{"/Users/gautiermarechal/touchtunes-spotify/src/index.js":"1","/Users/gautiermarechal/touchtunes-spotify/src/App.js":"2","/Users/gautiermarechal/touchtunes-spotify/src/reportWebVitals.js":"3","/Users/gautiermarechal/touchtunes-spotify/src/components/NavigationBar/NavigationBar.js":"4","/Users/gautiermarechal/touchtunes-spotify/src/constants.js":"5","/Users/gautiermarechal/touchtunes-spotify/src/components/GlobalStyles.js":"6","/Users/gautiermarechal/touchtunes-spotify/src/components/LoginPage/Login.js":"7","/Users/gautiermarechal/touchtunes-spotify/src/handlers/FetchSpotifyAuthentification.js":"8","/Users/gautiermarechal/touchtunes-spotify/src/components/ArtistSearchPage/SearchBar.js":"9","/Users/gautiermarechal/touchtunes-spotify/src/components/ArtistSearchPage/ArtistSearch.js":"10","/Users/gautiermarechal/touchtunes-spotify/src/redux/store.js":"11","/Users/gautiermarechal/touchtunes-spotify/src/redux/reducers/index.js":"12","/Users/gautiermarechal/touchtunes-spotify/src/redux/reducers/AuthentificationReducer.js":"13","/Users/gautiermarechal/touchtunes-spotify/src/components/ArtistSearchPage/Results.js":"14","/Users/gautiermarechal/touchtunes-spotify/src/redux/actions/AuthentificationActions.js":"15","/Users/gautiermarechal/touchtunes-spotify/src/handlers/FetchArtistSearch.js":"16","/Users/gautiermarechal/touchtunes-spotify/src/redux/reducers/SearchResultsReducer.js":"17","/Users/gautiermarechal/touchtunes-spotify/src/redux/actions/SearchResultsActions.js":"18","/Users/gautiermarechal/touchtunes-spotify/src/handlers/DisplayArtistPopularity.js":"19","/Users/gautiermarechal/touchtunes-spotify/src/handlers/FetchSingleArtistInfo.js":"20","/Users/gautiermarechal/touchtunes-spotify/src/redux/reducers/SingleArtistReducer.js":"21","/Users/gautiermarechal/touchtunes-spotify/src/redux/actions/SingleArtistActions.js":"22","/Users/gautiermarechal/touchtunes-spotify/src/components/SingleArtistPage/SingleArtist.js":"23"},{"size":664,"mtime":1610449575058,"results":"24","hashOfConfig":"25"},{"size":1053,"mtime":1610480172778,"results":"26","hashOfConfig":"25"},{"size":362,"mtime":1610394898813,"results":"27","hashOfConfig":"25"},{"size":1676,"mtime":1610535254683,"results":"28","hashOfConfig":"25"},{"size":147,"mtime":1610444801138,"results":"29","hashOfConfig":"25"},{"size":372,"mtime":1610485083682,"results":"30","hashOfConfig":"25"},{"size":1654,"mtime":1610543435237,"results":"31","hashOfConfig":"25"},{"size":497,"mtime":1610400520731,"results":"32","hashOfConfig":"25"},{"size":1864,"mtime":1610534205748,"results":"33","hashOfConfig":"25"},{"size":1308,"mtime":1610534246155,"results":"34","hashOfConfig":"25"},{"size":407,"mtime":1610484154651,"results":"35","hashOfConfig":"25"},{"size":400,"mtime":1610479941044,"results":"36","hashOfConfig":"25"},{"size":395,"mtime":1610456122950,"results":"37","hashOfConfig":"25"},{"size":4160,"mtime":1610534963363,"results":"38","hashOfConfig":"25"},{"size":159,"mtime":1610450079875,"results":"39","hashOfConfig":"25"},{"size":770,"mtime":1610457212527,"results":"40","hashOfConfig":"25"},{"size":562,"mtime":1610532523769,"results":"41","hashOfConfig":"25"},{"size":344,"mtime":1610532542882,"results":"42","hashOfConfig":"25"},{"size":1057,"mtime":1610467466177,"results":"43","hashOfConfig":"25"},{"size":1130,"mtime":1610482402883,"results":"44","hashOfConfig":"25"},{"size":823,"mtime":1610481886195,"results":"45","hashOfConfig":"25"},{"size":698,"mtime":1610483975905,"results":"46","hashOfConfig":"25"},{"size":5230,"mtime":1610541729221,"results":"47","hashOfConfig":"25"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},"1q2ukbq",{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"50"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"50"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"50"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"50"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"50"},"/Users/gautiermarechal/touchtunes-spotify/src/index.js",[],["101","102"],"/Users/gautiermarechal/touchtunes-spotify/src/App.js",["103"],"import React from \"react\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Redirect,\n} from \"react-router-dom\";\nimport NavigationBar from \"./components/NavigationBar/NavigationBar\";\nimport GlobalStyles from \"./components/GlobalStyles\";\nimport Login from \"./components/LoginPage/Login\";\nimport SearchBar from \"./components/ArtistSearchPage/SearchBar\";\nimport ArtistSearch from \"./components/ArtistSearchPage/ArtistSearch\";\nimport SingleArtist from \"./components/SingleArtistPage/SingleArtist\";\n\nfunction App() {\n  return (\n    <>\n      <GlobalStyles />\n      <Router>\n        <Route path=\"/\">\n          <NavigationBar />\n          <Switch>\n            <Redirect exact from=\"/\" to=\"/login\" />\n            <Route path=\"/login\">\n              <Login />\n            </Route>\n            <Route path=\"/artist-search\">\n              <ArtistSearch />\n            </Route>\n            <Route path=\"/artist/:id\">\n              <SingleArtist />\n            </Route>\n          </Switch>\n        </Route>\n      </Router>\n    </>\n  );\n}\n\nexport default App;\n","/Users/gautiermarechal/touchtunes-spotify/src/reportWebVitals.js",[],"/Users/gautiermarechal/touchtunes-spotify/src/components/NavigationBar/NavigationBar.js",["104"],"import React, { useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport { COLORS } from \"../../constants\";\nimport { GoSearch } from \"react-icons/go\";\n\nconst NavigationBar = () => {\n  const singleArtist = useSelector((state) => state.singleArtist);\n  const searchUrl = useSelector((state) => state.search.url);\n  const history = useHistory();\n  return (\n    <>\n      <MainContainer>\n        <Link to=\"/login\">\n          <Title>Spotify Artist Search</Title>\n        </Link>\n        <SearchButton\n          show={singleArtist.status === \"received\" ? true : false}\n          onClick={() => {\n            history.push(`/artist-search/${searchUrl}`);\n          }}\n        >\n          <SearchIcon />\n        </SearchButton>\n      </MainContainer>\n    </>\n  );\n};\n\nconst MainContainer = styled.div`\n  display: flex;\n  width: 100%;\n  height: 140px;\n  background-color: ${COLORS.lightBlue};\n  align-items: center;\n  justify-content: space-between;\n`;\n\nconst Title = styled.h1`\n  margin-left: 50px;\n  color: ${COLORS.pink};\n  @media (max-width: 405px) {\n    font-size: 7vw;\n    margin-left: 30px;\n  }\n`;\n\nconst SearchButton = styled.button`\n  border: none;\n  outline: none;\n  display: ${(props) => (props.show ? \"flex\" : \"none\")};\n  background-color: transparent;\n  align-items: center;\n  justify-content: center;\n  margin-right: 50px;\n  height: 80px;\n  width: 80px;\n  cursor: pointer;\n  @media (max-width: 405px) {\n    margin-right: 30px;\n  }\n`;\n\nconst SearchIcon = styled(GoSearch)`\n  height: 30px;\n  width: 30px;\n  color: ${COLORS.pink};\n`;\n\nexport default NavigationBar;\n","/Users/gautiermarechal/touchtunes-spotify/src/constants.js",[],"/Users/gautiermarechal/touchtunes-spotify/src/components/GlobalStyles.js",[],"/Users/gautiermarechal/touchtunes-spotify/src/components/LoginPage/Login.js",["105"],"/Users/gautiermarechal/touchtunes-spotify/src/handlers/FetchSpotifyAuthentification.js",[],"/Users/gautiermarechal/touchtunes-spotify/src/components/ArtistSearchPage/SearchBar.js",[],"/Users/gautiermarechal/touchtunes-spotify/src/components/ArtistSearchPage/ArtistSearch.js",["106","107"],"import React, { useEffect, useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport styled from \"styled-components\";\nimport { COLORS } from \"../../constants\";\nimport {\n  errorAccessToken,\n  receiveAccessToken,\n} from \"../../redux/actions/AuthentificationActions\";\nimport { recordURL } from \"../../redux/actions/SearchResultsActions\";\nimport SearchBar from \"./SearchBar\";\n\nconst ArtistSearch = () => {\n  const dispatch = useDispatch();\n  useEffect(() => {\n    const currentURL = new URL(window.location.href);\n    //User denied access\n    if (currentURL.search === \"?error=access_denied\") {\n      dispatch(errorAccessToken());\n    } else {\n      //User accepts access => Retrieve access token from url\n      let currentHash = window.location.hash;\n      const endIndex = currentHash.indexOf(\"&\");\n      currentHash = currentHash.substring(14, endIndex);\n      dispatch(receiveAccessToken(currentHash));\n      dispatch(recordURL(window.location.hash));\n    }\n  }, []);\n  return (\n    <>\n      <MainContainer>\n        <SearchBar />\n      </MainContainer>\n    </>\n  );\n};\n\nconst MainContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  min-height: 80vh;\n  align-items: center;\n  justify-content: center;\n  background-color: ${COLORS.lightBlue};\n`;\n\nexport default ArtistSearch;\n","/Users/gautiermarechal/touchtunes-spotify/src/redux/store.js",[],"/Users/gautiermarechal/touchtunes-spotify/src/redux/reducers/index.js",[],"/Users/gautiermarechal/touchtunes-spotify/src/redux/reducers/AuthentificationReducer.js",[],"/Users/gautiermarechal/touchtunes-spotify/src/components/ArtistSearchPage/Results.js",["108","109","110"],"import React, { useEffect, useRef, useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport { COLORS } from \"../../constants\";\nimport displayArtistPopularity from \"../../handlers/DisplayArtistPopularity\";\nimport fetchSingleArtistInfo from \"../../handlers/FetchSingleArtistInfo\";\n\nconst Results = ({ search, resultRef }) => {\n  const [showResults, setShowResults] = useState(false);\n  const results = useSelector((state) => state.search.artists);\n  const token = useSelector((state) => state.authentification.token);\n\n  useEffect(() => {\n    if (!results) {\n      return;\n    }\n    if (!results.items) {\n      setShowResults(false);\n    } else {\n      setShowResults(true);\n    }\n  }, [results]);\n\n  return (\n    <>\n      {results ? (\n        results.items ? (\n          <ResultContainer show={showResults} ref={resultRef}>\n            <ResultsTitleContainer>\n              <ResultsTitle>Results for \"{search}\"</ResultsTitle>\n            </ResultsTitleContainer>\n            <ResultList>\n              {results.items.map(\n                (artist) =>\n                  artist.images[0] && (\n                    <Link to={`/artist/${artist.id}`}>\n                      <ResultListItem>\n                        <ArtistImageContainer>\n                          <ArtistImage\n                            src={\n                              artist.images[0] ? artist.images[0].url : \"image\"\n                            }\n                          />\n                        </ArtistImageContainer>\n                        <ArtistInfoContainer>\n                          <ArtistsTagsContainer>\n                            <ArtistName>{artist.name}</ArtistName>\n                            <ArtistFollowers>\n                              {artist.followers.total} followers\n                            </ArtistFollowers>\n                          </ArtistsTagsContainer>\n                          <ArtistRatings>\n                            {displayArtistPopularity(artist.popularity)}\n                          </ArtistRatings>\n                        </ArtistInfoContainer>\n                      </ResultListItem>\n                    </Link>\n                  )\n              )}\n            </ResultList>\n          </ResultContainer>\n        ) : null\n      ) : null}\n    </>\n  );\n};\n\nconst ResultContainer = styled.div`\n  display: ${(props) => (props.show ? \"flex\" : \"none\")};\n  width: 80vw;\n  background-color: ${COLORS.white};\n  margin: 50px 100px 50px 100px;\n  flex-direction: column;\n`;\n\nconst ResultList = styled.div`\n  display: grid;\n  grid-template-columns: 33.33% 33.33% 33.33%;\n  margin: 0px 30px 30px 30px;\n\n  @media (max-width: 600px) {\n    grid-template-columns: 50% 50%;\n  }\n\n  @media (max-width: 427px) {\n    grid-template-columns: 100%;\n  }\n`;\n\nconst ResultListItem = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: auto;\n  margin: 30px;\n  height: 300px;\n  cursor: pointer;\n  padding: 20px;\n  transition: 0.2s;\n\n  &:hover {\n    background-color: ${COLORS.pink};\n    color: ${COLORS.white};\n  }\n\n  @media (max-width: 780px) {\n    padding: 0px;\n    margin: 10px;\n  }\n`;\n\nconst ArtistImageContainer = styled.div`\n  height: auto;\n  overflow: hidden;\n  max-height: 172px;\n  border-bottom-left-radius: 7px;\n  border-bottom-right-radius: 7px;\n\n  @media (max-width: 427px) {\n    max-height: none;\n  }\n`;\n\nconst ArtistImage = styled.img`\n  width: 100%;\n  height: auto;\n  overflow: hidden;\n  flex-shrink: 0;\n  border-radius: 7px;\n`;\n\nconst ArtistInfoContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: space-between;\n`;\n\nconst ArtistsTagsContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\n\nconst ArtistName = styled.h3`\n  margin-bottom: 3px;\n`;\n\nconst ArtistFollowers = styled.p`\n  margin: 0;\n`;\n\nconst ArtistRatings = styled.div`\n  display: flex;\n`;\n\nconst ResultsTitleContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  margin-top: 30px;\n`;\n\nconst ResultsTitle = styled.h1`\n  color: ${COLORS.pink};\n  @media (max-width: 377px) {\n    font-size: 7vw;\n  }\n`;\nexport default Results;\n","/Users/gautiermarechal/touchtunes-spotify/src/redux/actions/AuthentificationActions.js",[],"/Users/gautiermarechal/touchtunes-spotify/src/handlers/FetchArtistSearch.js",[],"/Users/gautiermarechal/touchtunes-spotify/src/redux/reducers/SearchResultsReducer.js",[],"/Users/gautiermarechal/touchtunes-spotify/src/redux/actions/SearchResultsActions.js",[],"/Users/gautiermarechal/touchtunes-spotify/src/handlers/DisplayArtistPopularity.js",[],"/Users/gautiermarechal/touchtunes-spotify/src/handlers/FetchSingleArtistInfo.js",[],["111","112"],"/Users/gautiermarechal/touchtunes-spotify/src/redux/reducers/SingleArtistReducer.js",[],"/Users/gautiermarechal/touchtunes-spotify/src/redux/actions/SingleArtistActions.js",[],"/Users/gautiermarechal/touchtunes-spotify/src/components/SingleArtistPage/SingleArtist.js",["113"],"import React, { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useParams } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport { COLORS } from \"../../constants\";\nimport { asyncReceiveSingleArtistInfo } from \"../../redux/actions/SingleArtistActions\";\n\nconst SingleArtist = () => {\n  const id = useParams().id;\n  const token = useSelector((state) => state.authentification.token);\n  const dispatch = useDispatch();\n  const singleArtist = useSelector((state) => state.singleArtist);\n  useEffect(() => {\n    dispatch(asyncReceiveSingleArtistInfo(id, token));\n  }, []);\n  return (\n    <>\n      {singleArtist.status === \"received\" ? (\n        <>\n          <HeaderContainer>\n            <AuthorImage src={singleArtist.singleArtist.images[0].url} />\n            <AuthorName>{singleArtist.singleArtist.name}</AuthorName>\n            <AlbumsTitle>Albums</AlbumsTitle>\n          </HeaderContainer>\n          <Wrapper>\n            <AlbumsContainer>\n              {singleArtist.singleArtist.albums && (\n                <AlbumsGrid>\n                  {singleArtist.singleArtist.albums.items.map((album) => {\n                    return (\n                      <LinkWrapper\n                        target=\"_blank\"\n                        href={album.external_urls.spotify}\n                      >\n                        <Album>\n                          <AlbumCoverContainer>\n                            <AlbumCover src={album.images[0].url} />\n                          </AlbumCoverContainer>\n                          <AlbumInfoContainer>\n                            <AlbumTagsContainer>\n                              <AlbumTitle>{album.name}</AlbumTitle>\n                              <AlbumArtists>\n                                {album.artists.map((artist) => (\n                                  <ArtistName>{artist.name}</ArtistName>\n                                ))}\n                              </AlbumArtists>\n                              <AlbumDate>{album.release_date}</AlbumDate>\n                              <AlbumNoOfTracks>\n                                {album.total_tracks} tracks\n                              </AlbumNoOfTracks>\n                            </AlbumTagsContainer>\n                          </AlbumInfoContainer>\n                          <PreviewSpotify>\n                            <ButtonLabel>Preview</ButtonLabel>\n                          </PreviewSpotify>\n                        </Album>\n                      </LinkWrapper>\n                    );\n                  })}\n                </AlbumsGrid>\n              )}\n            </AlbumsContainer>\n          </Wrapper>\n        </>\n      ) : null}\n    </>\n  );\n};\n\nconst HeaderContainer = styled.div`\n  display: flex;\n  width: 100%;\n  justify-content: center;\n  align-items: center;\n  flex-direction: column;\n  background-color: ${COLORS.lightBlue};\n`;\n\nconst AuthorImage = styled.img`\n  height: auto;\n  width: 300px;\n  border-radius: 7px;\n  @media (max-width: 500px) {\n    width: 80%;\n  }\n`;\n\nconst AuthorName = styled.h1`\n  color: ${COLORS.pink};\n`;\n\nconst AlbumsTitle = styled.h4`\n  color: grey;\n  margin: 0;\n  font-style: italic;\n`;\n\nconst Wrapper = styled.div`\n  display: flex;\n  width: 100vw;\n  justify-content: center;\n`;\n\nconst AlbumsContainer = styled.div`\n  display: flex;\n  background-color: ${COLORS.white};\n  flex-direction: column;\n  margin: 50px 100px 50px 100px;\n\n  @media (max-width: 600px) {\n    margin: 20px;\n  }\n`;\n\nconst AlbumsGrid = styled.div`\n  display: grid;\n  grid-template-columns: 33.33% 33.33% 33.33%;\n  margin: 0px 30px 30px 30px;\n\n  @media (max-width: 600px) {\n    grid-template-columns: 50% 50%;\n  }\n\n  @media (max-width: 427px) {\n    grid-template-columns: 100%;\n  }\n`;\n\nconst LinkWrapper = styled.a``;\n\nconst Album = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: auto;\n  margin: 30px;\n  cursor: pointer;\n  padding: 20px 20px 0px 20px;\n  transition: 0.2s;\n  height: 90%;\n  justify-content: space-between;\n\n  &:hover {\n    background-color: ${COLORS.pink};\n    color: ${COLORS.white};\n  }\n\n  @media (max-width: 940px) {\n    padding: 10px;\n    margin: 20px;\n  }\n`;\n\nconst AlbumCoverContainer = styled.div``;\n\nconst AlbumCover = styled.img`\n  width: 100%;\n  height: auto;\n  overflow: hidden;\n  flex-shrink: 0;\n  border-radius: 7px;\n`;\n\nconst AlbumInfoContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: space-between;\n`;\n\nconst AlbumTagsContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\n\nconst AlbumTitle = styled.h3`\n  margin-bottom: 3px;\n`;\n\nconst AlbumArtists = styled.div`\n  margin: 0;\n`;\n\nconst ArtistName = styled.p`\n  margin-right: 5px;\n`;\n\nconst AlbumDate = styled.p`\n  display: flex;\n`;\n\nconst AlbumNoOfTracks = styled.p`\n  display: flex;\n`;\n\nconst PreviewSpotify = styled.button`\n  border: none;\n  background-color: ${COLORS.lightBlue};\n  color: ${COLORS.black};\n  height: 40px;\n  cursor: pointer;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  outline: none;\n  bottom: 0;\n  width: 100%;\n  margin-bottom: 20px;\n  @media (max-width: 940px) {\n    margin: 0px;\n  }\n`;\n\nconst ButtonLabel = styled.h4`\n  color: ${COLORS.pink};\n`;\n\nexport default SingleArtist;\n",{"ruleId":"114","replacedBy":"115"},{"ruleId":"116","replacedBy":"117"},{"ruleId":"118","severity":1,"message":"119","line":11,"column":8,"nodeType":"120","messageId":"121","endLine":11,"endColumn":17},{"ruleId":"118","severity":1,"message":"122","line":1,"column":17,"nodeType":"120","messageId":"121","endLine":1,"endColumn":25},{"ruleId":"118","severity":1,"message":"123","line":5,"column":8,"nodeType":"120","messageId":"121","endLine":5,"endColumn":36},{"ruleId":"118","severity":1,"message":"122","line":1,"column":28,"nodeType":"120","messageId":"121","endLine":1,"endColumn":36},{"ruleId":"124","severity":1,"message":"125","line":27,"column":6,"nodeType":"126","endLine":27,"endColumn":8,"suggestions":"127"},{"ruleId":"118","severity":1,"message":"128","line":1,"column":28,"nodeType":"120","messageId":"121","endLine":1,"endColumn":34},{"ruleId":"118","severity":1,"message":"129","line":7,"column":8,"nodeType":"120","messageId":"121","endLine":7,"endColumn":29},{"ruleId":"118","severity":1,"message":"130","line":12,"column":9,"nodeType":"120","messageId":"121","endLine":12,"endColumn":14},{"ruleId":"114","replacedBy":"131"},{"ruleId":"116","replacedBy":"132"},{"ruleId":"124","severity":1,"message":"133","line":15,"column":6,"nodeType":"126","endLine":15,"endColumn":8,"suggestions":"134"},"no-native-reassign",["135"],"no-negated-in-lhs",["136"],"no-unused-vars","'SearchBar' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.","'fetchSpotifyAuthentification' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["137"],"'useRef' is defined but never used.","'fetchSingleArtistInfo' is defined but never used.","'token' is assigned a value but never used.",["135"],["136"],"React Hook useEffect has missing dependencies: 'dispatch', 'id', and 'token'. Either include them or remove the dependency array.",["138"],"no-global-assign","no-unsafe-negation",{"desc":"139","fix":"140"},{"desc":"141","fix":"142"},"Update the dependencies array to be: [dispatch]",{"range":"143","text":"144"},"Update the dependencies array to be: [dispatch, id, token]",{"range":"145","text":"146"},[980,982],"[dispatch]",[624,626],"[dispatch, id, token]"]